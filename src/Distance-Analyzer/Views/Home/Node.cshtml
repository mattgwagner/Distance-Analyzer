@model Distance_Analyzer.Models.Node

@using (Html.BeginForm("Process", "Home", new { Model.id }, FormMethod.Post))
{
    <button type="submit">Process This Node</button>
}

@Html.ActionLink("Edit", "Edit", new { Model.id })

<fieldset>
    <legend>@Html.DisplayFor(_ => _.Description)</legend>

    <div>
        @Html.LabelFor(_ => _.Is_Super_Node)
        @Html.DisplayFor(_ => _.Is_Super_Node)
    </div>

    <div>
        @Html.LabelFor(_ => _.Address)
        @Html.DisplayFor(_ => _.Address)
    </div>

    <div>
        <ul>
            @foreach (var tag in Model.Tags)
            {
                <li>@Html.ActionLink(tag, "Index", "Home", new { Tags = new[] { tag } }, null)</li>
            }
        </ul>
    </div>
</fieldset>

<hr />

<h3>Drive Times to Other Nodes</h3>

<table class="table">

    <thead>
        <tr>
            <th>@Html.DisplayNameFor(_ => Model.Mappings.FirstOrDefault().To)</th>
            <th>@Html.DisplayNameFor(_ => Model.Mappings.FirstOrDefault().Distance_Meters)</th>
            <th>@Html.DisplayNameFor(_ => Model.Mappings.FirstOrDefault().Driving_Time)</th>
        </tr>
    </thead>

    @foreach (var mapped in Model.Mappings)
    {
        <tr>
            <td>@await Component.InvokeAsync("Node", new { id = mapped.To })</td>
            <td>@Html.DisplayFor(_ => mapped.Distance_Meters)</td>
            <td>@Html.DisplayFor(_ => mapped.Driving_Time)</td>
        </tr>
    }
</table>

<hr />

@*@await Component.InvokeAsync("Map", new { Model.id })*@

@using (Html.BeginForm("Delete", "Home", new { Model.id }))
{
    <button class="btn-danger">Delete</button>
}